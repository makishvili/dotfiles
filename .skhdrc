###  NOTE(koekeishiya): A list of all built-in modifier and literal keywords can
##                     be found at https://github.com/koekeishiya/skhd/issues/1
##
##                     A hotkey is written according to the following rules:
##
##                       hotkey   = <mode> '<' <action> | <action>
##
##                       mode     = 'name of mode' | <mode> ',' <mode>
##
##                       action   = <keysym> ':' <command> | <keysym> '->' ':' <command>
##                                  <keysym> ';' <mode>    | <keysym> '->' ';' <mode>
##
##                       keysym   = <mod> '-' <key> | <key>
##
##                       mod      = 'built-in mod keyword' | <mod> '+' <mod>
##
##                       key      = <literal> | <keycode>
##
##                       literal  = 'single letter or built-in keyword'
##
##                       keycode  = 'apple keyboard kVK_<Key> values (0x3C)'
##
##                       ->       = keypress is not consumed by skhd
##
##                       command  = command is executed through '$SHELL -c' and
##                                  follows valid shell syntax. if the $SHELL environment
##                                  variable is not set, it will default to '/bin/bash'.
##                                  when bash is used, the ';' delimeter can be specified
##                                  to chain commands.
##
##                                  to allow a command to extend into multiple lines,
##                                  prepend '\' at the end of the previous line.
##
##                                  an EOL character signifies the end of the bind.
##
##
##  NOTE(koekeishiya): A mode is declared according to the following rules:
##
##                       mode_decl = '::' <name> '@' ':' <command> | '::' <name> ':' <command> |
##                                   '::' <name> '@'               | '::' <name>
##
##                       name      = desired name for this mode,
##
##                       @         = capture keypresses regardless of being bound to an action
##
##                       command  = command is executed through '$SHELL -c' and
##                                  follows valid shell syntax. if the $SHELL environment
##                                  variable is not set, it will default to '/bin/bash'.
##                                  when bash is used, the ';' delimeter can be specified
##                                  to chain commands.
##
##                                  to allow a command to extend into multiple lines,
##                                  prepend '\' at the end of the previous line.
##
##                                  an EOL character signifies the end of the bind.

# add an on_enter command to the default mode
:: default : chunkc border::color 0xff0f6288

# defines a new mode 'test' with an on_enter command, that captures keypresses
:: test @ : chunkc border::color 0xff24ccaa

# from 'default' mode, activate mode 'test'
alt - d ; test

# from 'test' mode, activate mode 'default'
test < alt - d ; default
test < return ; default
test < escape ; default

## launch a new terminal instance when in either 'default' or 'test' mode
## default, test < cmd - return : open -na /Applications/Terminal.app

## open terminal, blazingly fast compared to iTerm/Hyper
#cmd - return : open -na /Applications/Kitty.app

## open qutebrowser
#cmd + shift - return : ~/Scripts/qtb.sh

# close focused window
#fn - w : chunkc tiling::window --close

## focus window
ctrl - h : chunkc tiling::window --focus west
ctrl - j : chunkc tiling::window --focus south
ctrl - k : chunkc tiling::window --focus north
ctrl - l : chunkc tiling::window --focus east

test < left : chunkc tiling::window --focus west
test < up : chunkc tiling::window --focus south
test < down : chunkc tiling::window --focus north
test < right : chunkc tiling::window --focus east

cmd - j : chunkc tiling::window --focus prev
alt - tab : chunkc tiling::window --focus prev
test < cmd - tab : chunkc tiling::window --focus next
#alt - tab : chunkc tiling::window --focus next

## equalize size of windows
#shift + alt - 0 : chunkc tiling::desktop --equalize

# swap window
test < cmd - left : chunkc tiling::window --swap west; skhd -k "alt - d"
test < cmd - up : chunkc tiling::window --swap south; skhd -k "alt - d"
test < cmd - down : chunkc tiling::window --swap north; skhd -k "alt - d"
test < cmd - right : chunkc tiling::window --swap east; skhd -k "alt - d"

# move window
#test < cmd - left : chunkc tiling::window --warp west; skhd -k "alt - d"
#test < cmd - up : chunkc tiling::window --warp south; skhd -k "alt - d"
#test < cmd - down : chunkc tiling::window --warp north; skhd -k "alt - d"
#test < cmd - right : chunkc tiling::window --warp east; skhd -k "alt - d"

# make floating window fill screen
#shift + alt - up     : chunkc tiling::window --grid-layout 1:1:0:0:1:1

# make floating window fill left-half of screen
#shift + alt - left   : chunkc tiling::window --grid-layout 1:2:0:0:1:1

# make floating window fill right-half of screen
#shift + alt - right  : chunkc tiling::window --grid-layout 1:2:1:0:1:1

## fast focus desktop
#cmd + alt - x : chunkc tiling::desktop --focus $(chunkc get _last_active_desktop)
test < cmd + alt - z : chunkc tiling::desktop --focus prev
#cmd + alt - c : chunkc tiling::desktop --focus next
alt - q : chunkc tiling::desktop --focus 1
test < 1 : chunkc tiling::desktop --focus 1; skhd -k "alt - d"
alt - w : chunkc tiling::desktop --focus 2
test < 2 : chunkc tiling::desktop --focus 2; skhd -k "alt - d"
alt - a : chunkc tiling::desktop --focus 3
test < 3 : chunkc tiling::desktop --focus 3; skhd -k "alt - d"
alt - s : chunkc tiling::desktop --focus 4
test < 4 : chunkc tiling::desktop --focus 4; skhd -k "alt - d"
alt - e : chunkc tiling::desktop --focus 5
test < 5 : chunkc tiling::desktop --focus 5; skhd -k "alt - d"
test < 6 : chunkc tiling::desktop --focus 6; skhd -k "alt - d"
test < 6 : chunkc tiling::desktop --focus 6; skhd -k "alt - d"
test < 7 : chunkc tiling::desktop --focus 7; skhd -k "alt - d"
test < 8 : chunkc tiling::desktop --focus 8; skhd -k "alt - d"
test < 9 : chunkc tiling::desktop --focus 9; skhd -k "alt - d"


## send window to desktop
#shift + alt - x : chunkc tiling::window --send-to-desktop $(chunkc get _last_active_desktop)
#shift + alt - z : chunkc tiling::window --send-to-desktop prev
test < shift + alt - c : chunkc tiling::window --send-to-desktop next
test < shift + alt - 1 : chunkc tiling::window --send-to-desktop 1; skhd -k "alt - d"
test < shift + alt - 2 : chunkc tiling::window --send-to-desktop 2; skhd -k "alt - d"
test < shift + alt - 3 : chunkc tiling::window --send-to-desktop 3; skhd -k "alt - d"
test < shift + alt - 4 : chunkc tiling::window --send-to-desktop 4; skhd -k "alt - d"
test < shift + alt - 5 : chunkc tiling::window --send-to-desktop 5; skhd -k "alt - d"
#shift + alt - 6 : chunkc tiling::window --send-to-desktop 6
#shift + alt - 7 : chunkc tiling::window --send-to-desktop 7

## send window to desktop and follow focus
#shift + cmd - x : chunkc tiling::window --send-to-desktop $(chunkc get _last_active_desktop); chunkc tiling::desktop --focus $(chunkc get _last_active_desktop)
#shift + cmd - z : chunkc tiling::window --send-to-desktop prev; chunkc tiling::desktop --focus prev
#shift + cmd - c : chunkc tiling::window --send-to-desktop next; chunkc tiling::desktop --focus next
test < shift + cmd - 1 : chunkc tiling::window --send-to-desktop 1; chunkc tiling::desktop --focus 1; skhd -k "alt - d"
test < shift + cmd - 2 : chunkc tiling::window --send-to-desktop 2; chunkc tiling::desktop --focus 2; skhd -k "alt - d"
test < shift + cmd - 3 : chunkc tiling::window --send-to-desktop 3; chunkc tiling::desktop --focus 3; skhd -k "alt - d"
test < shift + cmd - 4 : chunkc tiling::window --send-to-desktop 4; chunkc tiling::desktop --focus 4; skhd -k "alt - d"
test < shift + cmd - 5 : chunkc tiling::window --send-to-desktop 5; chunkc tiling::desktop --focus 5; skhd -k "alt - d"
#shift + cmd - 6 : chunkc tiling::window --send-to-desktop 6; chunkc tiling::desktop --focus 6
#shift + cmd - 7 : chunkc tiling::window --send-to-desktop 7; chunkc tiling::desktop --focus 7

## focus monitor
#ctrl + alt - z  : chunkc tiling::monitor -f prev
#ctrl + alt - c  : chunkc tiling::monitor -f next
#ctrl + alt - 1  : chunkc tiling::monitor -f 1
#ctrl + alt - 2  : chunkc tiling::monitor -f 2
#ctrl + alt - 3  : chunkc tiling::monitor -f 3

## send window to monitor and follow focus
#ctrl + cmd - z  : chunkc tiling::window --send-to-monitor prev; chunkc tiling::monitor -f prev
#ctrl + cmd - c  : chunkc tiling::window --send-to-monitor next; chunkc tiling::monitor -f next
#ctrl + cmd - 1  : chunkc tiling::window --send-to-monitor 1; chunkc tiling::monitor -f 1
#ctrl + cmd - 2  : chunkc tiling::window --send-to-monitor 2; chunkc tiling::monitor -f 2
#ctrl + cmd - 3  : chunkc tiling::window --send-to-monitor 3; chunkc tiling::monitor -f 3

# increase region size
test < cmd - h : chunkc tiling::window --use-temporary-ratio 1.1 --adjust-window-edge west
test < cmd - k : chunkc tiling::window --use-temporary-ratio 0.1 --adjust-window-edge south
test < cmd - j : chunkc tiling::window --use-temporary-ratio 0.1 --adjust-window-edge north
test < cmd - l : chunkc tiling::window --use-temporary-ratio 0.1 --adjust-window-edge east

# decrease region size
test < ctrl - l : chunkc tiling::window --use-temporary-ratio -0.1 --adjust-window-edge west
test < ctrl - j : chunkc tiling::window --use-temporary-ratio -0.1 --adjust-window-edge south
test < ctrl - k : chunkc tiling::window --use-temporary-ratio -0.1 --adjust-window-edge north
test < ctrl - h : chunkc tiling::window --use-temporary-ratio -0.1 --adjust-window-edge east

# set insertion point for focused container
test < alt - f : chunkc tiling::window --use-insertion-point cancel
test < alt - h : chunkc tiling::window --use-insertion-point west
test < alt - j : chunkc tiling::window --use-insertion-point south
test < alt - k : chunkc tiling::window --use-insertion-point north
test < alt - l : chunkc tiling::window --use-insertion-point east

# rotate tree
fn - r : chunkc tiling::desktop --rotate 90
test < r : chunkc tiling::desktop --rotate 90

## mirror tree y-axis
fn - y : chunkc tiling::desktop --mirror vertical
test < y : chunkc tiling::desktop --mirror vertical; skhd -k "alt - d"

## mirror tree x-axis
#alt - x : chunkc tiling::desktop --mirror horizontal

## toggle desktop offset
#fn - a : chunkc tiling::desktop --toggle offset

# toggle window fullscreen
test < f : chunkc tiling::window --toggle fullscreen; skhd -k "alt - d"

## toggle window native fullscreen
#shift + alt - f : chunkc tiling::window --toggle native-fullscreen

# toggle window parent zoom
test < d : chunkc tiling::window --toggle parent; skhd -k "alt - d"

## toggle window split type
ctrl - e : chunkc tiling::window --toggle split

## toggle window fade
#alt - q : chunkc tiling::window --toggle fade

# float / unfloat window and center on screen
test < t : chunkc tiling::window --toggle float;\
          chunkc tiling::window --grid-layout 4:4:1:1:2:2; skhd -k "alt - d"

# toggle sticky, float and resize to picture-in-picture size
test < s : chunkc tiling::window --toggle sticky;\
          chunkc tiling::window --grid-layout 5:5:4:0:1:1; skhd -k "alt - d"

## float next window to be tiled
#shift + alt - t : chunkc set window_float_next 1

# change layout of desktop
#ctrl + alt - a : chunkc tiling::desktop --layout bsp
f9 : chunkc tiling::desktop --layout bsp
#ctrl + alt - s : chunkc tiling::desktop --layout monocle
f10 : chunkc tiling::desktop --layout monocle
#ctrl + alt - d : chunkc tiling::desktop --layout float

#ctrl + alt - w : chunkc tiling::desktop --deserialize ~/.chunkwm_layouts/dev_1
#
# create desktop, move window and follow focus
test < shift + cmd - n : chunkc tiling::desktop --create;\
                  ids=$(chunkc tiling::query --desktops-for-monitor $(chunkc tiling::query --monitor-for-desktop $(chunkc tiling::query --desktop id)));\
                  chunkc tiling::window --send-to-desktop $(echo ${ids##* });\
                  chunkc tiling::desktop --focus $(echo ${ids##* });\
                  skhd -k "alt-d"


# create desktop and follow focus
test < cmd - n : chunkc tiling::desktop --create;\
                  ids=$(chunkc tiling::query --desktops-for-monitor $(chunkc tiling::query --monitor-for-desktop $(chunkc tiling::query --desktop id)));\
                  chunkc tiling::desktop --focus $(echo ${ids##* });\
                  skhd -k "alt-d"
#delete desktop
test < cmd - k : chunkc tiling::desktop --annihilate;\
                  skhd -k "alt-d"

